import{_ as _export_sfc,r as ref,o as onMounted,a as openBlock,c as createElementBlock,b as createBaseVNode,F as Fragment,d as renderList,t as toDisplayString,e as withDirectives,f as vModelText,j as withKeys,n as normalizeClass,i as createCommentVNode,x as normalizeStyle,p as pushScopeId,g as popScopeId}from"./index-508fcf59.js";const _24points_vue_vue_type_style_index_0_scoped_39af6f21_lang="",_withScopeId=o=>(pushScopeId("data-v-39af6f21"),o=o(),popScopeId(),o),_hoisted_1={class:"game-container"},_hoisted_2=_withScopeId(()=>createBaseVNode("h1",null,"24点游戏",-1)),_hoisted_3=_withScopeId(()=>createBaseVNode("p",{style:{"margin-bottom":"10px","margin-top":"0px"}},"使用下面的四个数，通过四则运算得到24",-1)),_hoisted_4=_withScopeId(()=>createBaseVNode("p",{style:{"margin-bottom":"10px","margin-top":"0px"}},"游戏规则：使用四个数（无顺序），通过加(+)、减(-)、乘(×或*)、除(÷或/)和括号，使表达式值等于24",-1)),_hoisted_5={class:"numbers-container"},_hoisted_6=["onMouseenter"],_hoisted_7={class:"input-container"},_hoisted_8=["disabled"],_hoisted_9={class:"no-solution-container"},_hoisted_10=_withScopeId(()=>createBaseVNode("span",null,"无解（这组数字无法计算出24）",-1)),_hoisted_11={key:0,class:"result-container"},_hoisted_12={key:1,class:"solution-container"},_hoisted_13=_withScopeId(()=>createBaseVNode("div",{class:"solution-title"},"可能的解法：",-1)),_hoisted_14={key:0,class:"solution-list"},_hoisted_15={key:1,class:"no-solution-text"},_sfc_main={__name:"24points",setup(__props){function judgePoint24(o){const s=new Set;function a(u,h){if(u.length===1){if(Math.abs(u[0]-24)<1e-6){const l=h[0];s.add(l.startsWith("(")&&l.endsWith(")")?l.slice(1,-1):l)}return}const m=u.length;for(let l=0;l<m;l++)for(let c=0;c<m;c++){if(l===c)continue;const e=[],t=[];for(let _=0;_<m;_++)_!==l&&_!==c&&(e.push(u[_]),t.push(h[_]));const r=u[l],i=u[c],p=h[l],d=h[c];e.push(r+i),t.push(`(${p} + ${d})`),a(e,t),e.pop(),t.pop(),e.push(r-i),t.push(`(${p} - ${d})`),a(e,t),e.pop(),t.pop(),e.push(i-r),t.push(`(${d} - ${p})`),a(e,t),e.pop(),t.pop(),e.push(r*i),t.push(`(${p} × ${d})`),a(e,t),e.pop(),t.pop(),Math.abs(i)>1e-6&&(e.push(r/i),t.push(`(${p} ÷ ${d})`),a(e,t),e.pop(),t.pop()),Math.abs(r)>1e-6&&(e.push(i/r),t.push(`(${d} ÷ ${p})`),a(e,t),e.pop(),t.pop())}}const v=o.map(u=>u.toString());return a(o,v),{isValid:s.size>0,solutions:Array.from(s)}}const numbers=ref([]),userInput=ref(""),isNoSolution=ref(!1),resultMessage=ref(""),resultStatus=ref(""),solutions=ref([]),showSolution=ref(!1),cardHover=ref(-1);function generateNumbers(){const o=[];for(let s=0;s<4;s++)o.push(Math.floor(Math.random()*13)+1);numbers.value=o;const n=judgePoint24([...o]);solutions.value=n.solutions}function checkAnswer(){var o;if(resultMessage.value="",resultStatus.value="",showSolution.value=!1,isNoSolution.value){solutions.value.length===0?(resultMessage.value="✓ 正确！这组数字确实无解",resultStatus.value="correct"):(resultMessage.value="✗ 错误！这组数字有解法",resultStatus.value="incorrect");return}if(!userInput.value.trim()){resultMessage.value='请输入算式或选择"无解"',resultStatus.value="incorrect";return}try{const sanitizedInput=userInput.value.replace(/×/g,"*").replace(/÷/g,"/"),inputNumbers=((o=sanitizedInput.match(/\d+/g))==null?void 0:o.map(Number))||[],sortedInput=[...inputNumbers].sort((n,s)=>n-s).join(","),sortedOriginal=[...numbers.value].sort((n,s)=>n-s).join(",");if(sortedInput!==sortedOriginal){resultMessage.value="✗ 错误！请使用给定的四个数字",resultStatus.value="incorrect";return}const result=eval(sanitizedInput);Math.abs(result-24)<1e-6?(resultMessage.value="✓ 正确！算式计算结果为24",resultStatus.value="correct"):(resultMessage.value=`✗ 错误！算式计算结果为${result.toFixed(2)}，不是24`,resultStatus.value="incorrect")}catch(n){resultMessage.value="✗ 无效的算式，请重新输入",resultStatus.value="incorrect"}}function showSolutions(){showSolution.value=!0,resultMessage.value="",resultStatus.value=""}function resetGame(){generateNumbers(),userInput.value="",isNoSolution.value=!1,resultMessage.value="",resultStatus.value="",showSolution.value=!1}function toggleNoSolution(){isNoSolution.value=!isNoSolution.value,isNoSolution.value&&(userInput.value="")}return onMounted(()=>{generateNumbers()}),(o,n)=>(openBlock(),createElementBlock("div",_hoisted_1,[_hoisted_2,_hoisted_3,_hoisted_4,createBaseVNode("div",_hoisted_5,[(openBlock(!0),createElementBlock(Fragment,null,renderList(numbers.value,(s,a)=>(openBlock(),createElementBlock("div",{class:"number-card",key:a,onMouseenter:v=>cardHover.value=a,onMouseleave:n[0]||(n[0]=v=>cardHover.value=-1)},toDisplayString(s),41,_hoisted_6))),128))]),createBaseVNode("div",_hoisted_7,[withDirectives(createBaseVNode("input",{type:"text",class:"input-box","onUpdate:modelValue":n[1]||(n[1]=s=>userInput.value=s),placeholder:"请输入算式，例如：(8-2)×(9-5)",disabled:isNoSolution.value,onKeyup:withKeys(checkAnswer,["enter"])},null,40,_hoisted_8),[[vModelText,userInput.value]])]),createBaseVNode("div",_hoisted_9,[createBaseVNode("div",{class:"checkbox-label",onClick:toggleNoSolution},[createBaseVNode("div",{class:normalizeClass(["checkbox-custom",{checked:isNoSolution.value}])},null,2),_hoisted_10])]),createBaseVNode("div",{class:"button-container"},[createBaseVNode("button",{class:"btn btn-primary",onClick:checkAnswer},"验证答案 "),createBaseVNode("button",{class:"btn btn-secondary",onClick:showSolutions},"查看答案 "),createBaseVNode("button",{class:"btn btn-warning",onClick:resetGame},"重新开始 ")]),resultMessage.value?(openBlock(),createElementBlock("div",_hoisted_11,[createBaseVNode("div",{class:normalizeClass({"result-correct":resultStatus.value==="correct","result-incorrect":resultStatus.value==="incorrect"})},toDisplayString(resultMessage.value),3)])):createCommentVNode("",!0),showSolution.value?(openBlock(),createElementBlock("div",_hoisted_12,[_hoisted_13,solutions.value.length>0?(openBlock(),createElementBlock("ul",_hoisted_14,[(openBlock(!0),createElementBlock(Fragment,null,renderList(solutions.value,(s,a)=>(openBlock(),createElementBlock("li",{class:"solution-item",key:a,style:normalizeStyle({animationDelay:`${a*.05}s`})},toDisplayString(s)+" = 24 ",5))),128))])):(openBlock(),createElementBlock("div",_hoisted_15," 这组数字无解！ "))])):createCommentVNode("",!0)]))}},_24points=_export_sfc(_sfc_main,[["__scopeId","data-v-39af6f21"]]);export{_24points as default};
